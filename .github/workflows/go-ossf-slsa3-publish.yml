# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

# # This workflow lets you compile your Go project using a SLSA3 compliant builder.
# # This workflow will generate a so-called "provenance" file describing the steps
# # that were performed to generate the final binary.
# # The project is an initiative of the OpenSSF (openssf.org) and is developed at
# # https://github.com/slsa-framework/slsa-github-generator.
# # The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# # For more information about SLSA and how it improves the supply-chain, visit slsa.dev.

# name: SLSA Go releaser
# on:
#   workflow_dispatch:
#   release:
#     types: [created]

# permissions: read-all

# jobs:
#   # ========================================================================================================================================
#   #     Prerequesite: Create a .slsa-goreleaser.yml in the root directory of your project.
#   #       See format in https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/go/README.md#configuration-file
#   #=========================================================================================================================================
#   build:
#     permissions:
#       id-token: write # To sign.
#       contents: write # To upload release assets.
#       actions: read   # To read workflow path.
#     uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v1.4.0
#     with:
#       go-version: 1.17
#       # =============================================================================================================
#       #     Optional: For more options, see https://github.com/slsa-framework/slsa-github-generator#golang-projects
#       # =============================================================================================================

name: Verifier releaser

on:
  # For manual tests.
  workflow_dispatch:
  push:
    tags:
      - "*" # triggers only if push new tag version, like `0.8.4`.
  # Run daily as a dry-run/test.
  schedule:
    - cron: "0 1 * * *"

permissions: read-all

# env:
#   GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   ISSUE_REPOSITORY: slsa-framework/slsa-verifier

jobs:
  # Generate ldflags dynamically.
  args:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.ldflags.outputs.version }}
    steps:
      - id: checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          fetch-depth: 0
      - id: ldflags
        run: |
          echo "version=$(git describe --tags --always --dirty | cut -c2-)" >> "$GITHUB_OUTPUT"

  builder:
    name: builder-${{matrix.os}}-${{matrix.arch}}
    needs: [args]
    strategy:
      matrix:
        os:
          - linux
          - windows
          - darwin
        arch:
          - amd64
          - arm64
    permissions:
      actions: read # For the detection of GitHub Actions environment.
      id-token: write # For signing.
      contents: write # For asset uploads.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v1.5.0
    with:
      go-version: 1.18
      config-file: .slsa-goreleaser/${{matrix.os}}-${{matrix.arch}}.yml
      compile-builder: true
      evaluated-envs: "COMMIT_DATE:${{needs.args.outputs.commit-date}}, COMMIT:${{needs.args.outputs.commit}}, VERSION:${{needs.args.outputs.version}}, TREE_STATE:${{needs.args.outputs.tree-state}}"